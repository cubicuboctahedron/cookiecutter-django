version: '2'

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - /projects/{{cookiecutter.project_slug}}/postgres:/var/lib/postgresql/data
      - /backups/{{cookiecutter.project_slug}}/postgres:/backups
    env_file: ./compose/postgres/.env.postgres
    restart: always
    network_mode: "bridge"

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    depends_on:
      - postgres
      - redis
    command: /gunicorn.sh
    env_file:
      - ./compose/postgres/.env.postgres
      - ./compose/django/.env.production
      - ./compose/django/.env.s3
    expose:
      - "5000"
    restart: always
    network_mode: "bridge"
    volumes:
      - /projects/{{cookiecutter.project_slug}}/media:/app/{{cookiecutter.project_slug}}/media
    links:
      - postgres

  redis:
    image: redis:latest
    restart: always
    network_mode: "bridge"
{% if cookiecutter.use_celery == 'y' %}
  celeryworker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    env_file: .env
    depends_on:
     - postgres
     - redis
    command: celery -A {{cookiecutter.project_slug}}.taskapp worker -l INFO
    restart: always
    network_mode: "bridge"

  celerybeat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    env_file: .env
    depends_on:
      - postgres
      - redis
    command: celery -A {{cookiecutter.project_slug}}.taskapp beat -l INFO
    restart: always
    network_mode: "bridge"
{% endif %}
